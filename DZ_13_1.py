# –í–æ–∑—å–º–∏—Ç–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ—Ö, —á—Ç–æ –±—ã–ª–∏ –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö
# —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö. –ù–∞–ø–∏—à–∏—Ç–µ –∫ –Ω–∏–º –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å –≤—ã–≤–æ–¥–æ–º
# –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–¥–Ω–∏–º–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä –Ω–µ–ª—å–∑—è
# —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.

# –ó–∞–¥–∞–Ω–∏–µ No2
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫.
# üìå –ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
# —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å.
# üìå –ï—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —É –Ω–∞—Å –∫–≤–∞–¥—Ä–∞—Ç.

class Niga_side_exception (Exception):
    def __init__(self,side: str, side_niga):
        self.side_niga = side_niga
        self.side = side
    def __str__ (self):
        return (f'storona {self.side} ravna {self.side_niga} eto otricatelnoe znachenie, neobhodimo polozhitelnoe chislo')

class Zero_side_exception (Niga_side_exception):
    def __init__(self, side: str, side_niga:int):
        self.side_niga = side_niga
        self.side = side

    def __str__ (self):
        return (f'storona {self.side} = {self.side_niga}, znachenie dolzhno byt bolshe')



class Rectangle:
    def __init__(self,side_a:int, side_b:int = None):
        self.side_a = side_a
        if side_b == None:
            self.side_b=side_a
        else:
            self.side_b = side_b
        if self.side_a < 0:
            raise Niga_side_exception('a', side_a)
        if self.side_b < 0:
            raise Niga_side_exception('b',side_b)
        if self.side_a == 0:
            raise Zero_side_exception('a',0)
        if self.side_b == 0:
            raise Zero_side_exception('b', 0)

    def get_perim (self)->int:
        return 2*self.side_a+2*self.side_b

    def get_square(self)->int:
        return self.side_a*self.side_b

if __name__ =='__main__':
    rect_1=Rectangle(2, 4)
    rect_2=Rectangle(5)
    print(rect_1.get_perim())
    print(rect_1.get_square())
    print(rect_2.get_perim())
    print(rect_2.get_square())
